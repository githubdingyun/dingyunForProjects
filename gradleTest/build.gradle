buildscript {
    ext.kotlin_version = '1.2.31'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.lsg'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
def createDir = {
    path ->
        File dir = new File(path)
        if (!dir.exists()) {
            dir.mkdirs()
        } else {
            println("该文件已经存在:$path")
        }
}

task makejavaDir() {
    def paths = ['src/main/java', 'src/main/resource', 'src/text/java', 'src/text/resource']
    doFirst {
        paths.forEach createDir
    }
}

task makeWebDir() {
//    evaluationDependsOnChildren("makeJavaDir")
    def paths = ['src/main/webapp', 'src/test/webapp']
    doLast {
        paths.forEach(createDir)
    }
}
def c2= {
    println('hello')
}
def c3 ={
    println('wrold')
}
def method2(Closure closure){
    closure()
}
method2 (c2)
method2 (c3)