<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsg.dao.RectDAO">
  <resultMap id="BaseResultMap" type="com.lsg.model.Rect">
    <id column="r_id" jdbcType="INTEGER" property="rId" />
    <result column="h_id" jdbcType="INTEGER" property="hId" />
    <result column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="r_money" jdbcType="DOUBLE" property="rMoney" />
    <result column="r_time" jdbcType="TIMESTAMP" property="rTime" />
    <result column="r_remark" jdbcType="VARCHAR" property="rRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    r_id, h_id, l_id, r_money, r_time, r_remark
  </sql>
  <select id="selectByExample" parameterType="com.lsg.model.RectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rect
    where r_id = #{rId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rect
    where r_id = #{rId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lsg.model.RectExample">
    delete from rect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lsg.model.Rect">
    insert into rect (r_id, h_id, l_id, 
      r_money, r_time, r_remark
      )
    values (#{rId,jdbcType=INTEGER}, #{hId,jdbcType=INTEGER}, #{lId,jdbcType=INTEGER}, 
      #{rMoney,jdbcType=DOUBLE}, #{rTime,jdbcType=TIMESTAMP}, #{rRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lsg.model.Rect">
    insert into rect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rId != null">
        r_id,
      </if>
      <if test="hId != null">
        h_id,
      </if>
      <if test="lId != null">
        l_id,
      </if>
      <if test="rMoney != null">
        r_money,
      </if>
      <if test="rTime != null">
        r_time,
      </if>
      <if test="rRemark != null">
        r_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rId != null">
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="hId != null">
        #{hId,jdbcType=INTEGER},
      </if>
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="rMoney != null">
        #{rMoney,jdbcType=DOUBLE},
      </if>
      <if test="rTime != null">
        #{rTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rRemark != null">
        #{rRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lsg.model.RectExample" resultType="java.lang.Long">
    select count(*) from rect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rect
    <set>
      <if test="record.rId != null">
        r_id = #{record.rId,jdbcType=INTEGER},
      </if>
      <if test="record.hId != null">
        h_id = #{record.hId,jdbcType=INTEGER},
      </if>
      <if test="record.lId != null">
        l_id = #{record.lId,jdbcType=INTEGER},
      </if>
      <if test="record.rMoney != null">
        r_money = #{record.rMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.rTime != null">
        r_time = #{record.rTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rRemark != null">
        r_remark = #{record.rRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rect
    set r_id = #{record.rId,jdbcType=INTEGER},
      h_id = #{record.hId,jdbcType=INTEGER},
      l_id = #{record.lId,jdbcType=INTEGER},
      r_money = #{record.rMoney,jdbcType=DOUBLE},
      r_time = #{record.rTime,jdbcType=TIMESTAMP},
      r_remark = #{record.rRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsg.model.Rect">
    update rect
    <set>
      <if test="hId != null">
        h_id = #{hId,jdbcType=INTEGER},
      </if>
      <if test="lId != null">
        l_id = #{lId,jdbcType=INTEGER},
      </if>
      <if test="rMoney != null">
        r_money = #{rMoney,jdbcType=DOUBLE},
      </if>
      <if test="rTime != null">
        r_time = #{rTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rRemark != null">
        r_remark = #{rRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsg.model.Rect">
    update rect
    set h_id = #{hId,jdbcType=INTEGER},
      l_id = #{lId,jdbcType=INTEGER},
      r_money = #{rMoney,jdbcType=DOUBLE},
      r_time = #{rTime,jdbcType=TIMESTAMP},
      r_remark = #{rRemark,jdbcType=VARCHAR}
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
</mapper>